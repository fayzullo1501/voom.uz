const express = require('express');
const router = express.Router();
const authController = require('../controllers/authController');

// üîπ –≠—Ç–∞–ø—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
router.post('/send-code', authController.sendVerificationCode);   // 1. –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞
router.post('/verify-code', authController.verifyCode);           // 2. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞
router.post('/set-password', authController.setPassword);         // 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—è

// üîπ –í—Ö–æ–¥
router.post('/login', authController.login);

// üîê –í—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
router.post('/admin-login', authController.adminLogin);

// üîß –í–†–ï–ú–ï–ù–ù–û: —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
// üîß –í–†–ï–ú–ï–ù–ù–û: —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
router.post('/create-admin', async (req, res) => {
  const User = require('../models/User');

  try {
    const { email, password } = req.body;

    const exists = await User.findOne({ email: email.toLowerCase() });
    if (exists) {
      return res.status(400).json({ message: '–ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' });
    }

    const admin = new User({
      email: email.toLowerCase(),
      password: password, // üëà –ù–ï –•–ï–®–ò–†–£–ï–ú!
      role: 'admin',
      isEmailVerified: true
    });

    await admin.save(); // —Ö–µ—à –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ userSchema.pre('save')
    res.status(201).json({ message: '–ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω', admin });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞:', err);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});


module.exports = router;
