const express = require('express');
const router = express.Router();
const userController = require('../controllers/userController');
const authMiddleware = require('../middleware/authMiddleware');
const upload = require('../middleware/uploadMiddleware'); // üëà middleware –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∫–∏

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.get('/me', authMiddleware, userController.getMe);

// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
router.patch('/profile', authMiddleware, userController.updateProfile);

// üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–∫–∏
router.post('/avatar', authMiddleware, upload.single('avatar'), userController.uploadAvatar);

// ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email
router.post('/verify-email', authMiddleware, userController.sendEmailVerificationLink);

// ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ)
router.get('/verify-email-callback', userController.verifyEmailToken);

// üì± –û—Ç–ø—Ä–∞–≤–∫–∞ SMS-–∫–æ–¥–∞ –Ω–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
router.post('/send-phone-code', authMiddleware, userController.sendPhoneVerificationCode);

// ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –ø–æ –∫–æ–¥—É
router.post('/verify-phone-code', authMiddleware, userController.verifyPhoneCode);

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (GET /api/users)
router.get('/', authMiddleware, userController.getAllUsers);

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
router.get('/:id', authMiddleware, userController.getUserById);

// üîπ –ê–¥–º–∏–Ω: —Å–æ–∑–¥–∞—Ç—å, –æ–±–Ω–æ–≤–∏—Ç—å, —É–¥–∞–ª–∏—Ç—å
router.post('/admin-create', authMiddleware, userController.createUserByAdmin);
router.put('/:id', authMiddleware, userController.updateUserByAdmin);
router.delete('/', authMiddleware, userController.deleteUsers);

// üî∏ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞ (passport), —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ /uploads/passports
const passportUpload = require('../middleware/passportUploadMiddleware');
router.post('/upload-passport', authMiddleware, passportUpload.single('passport'), userController.uploadPassport);

router.post('/:id/confirm-passport', authMiddleware, userController.confirmPassport);
router.post('/:id/reject-passport', authMiddleware, userController.rejectPassport);


module.exports = router;
